{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","filter","movie","toLowerCase","includes","map","key","imdbId","NewMovie","state","values","errors","isValidImdbUrl","isValidImgUrl","handleChange","event","target","value","name","setState","trim","handleSubmit","preventDefault","onAdd","props","urlRegExp","test","this","onSubmit","htmlFor","type","id","onChange","placeholder","Component","App","moviesFromServer","input","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eaa8739c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies, filter }) => (\n  <div className=\"movies\">\n    {movies.filter(movie => movie.title\n      .toLowerCase().includes(filter.toLowerCase())\n        || movie.description\n          .toLowerCase().includes(filter.toLowerCase()))\n      .map(movie => (\n        <MovieCard key={movie.imdbId} {...movie} />\n      ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n  filter: PropTypes.string,\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n  filter: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    values: {\n      title: '',\n      description: '', // not req\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    errors: {\n      title: false,\n      description: false, // not req\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n      isValidImdbUrl: false,\n      isValidImgUrl: false,\n    },\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState(state => ({\n      values: {\n        ...state.values,\n        [name]: value.trim(),\n      },\n      errors: {\n        ...state.errors,\n        [name]: false,\n      },\n    }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onAdd } = this.props;\n    const { values } = this.state;\n    const { title, imgUrl, imdbUrl, imdbId } = values;\n    // eslint-disable-next-line\n    const urlRegExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (!title\n      || !imgUrl\n      || !imdbUrl\n      || !imdbId\n      || urlRegExp.test(imgUrl) === false\n      || urlRegExp.test(imdbUrl) === false\n    ) {\n      this.setState(state => ({\n        errors: {\n          ...state.errors,\n          title: !title,\n          imgUrl: !imgUrl,\n          imdbUrl: !imgUrl,\n          imdbId: !imgUrl,\n          isValidImgUrl: !urlRegExp.test(imgUrl),\n          isValidImdbUrl: !urlRegExp.test(imdbUrl),\n        },\n      }));\n\n      return;\n    }\n\n    onAdd(values);\n\n    this.setState({\n      values: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  }\n\n  render() {\n    const { values, errors } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <label htmlFor=\"title\">\n          Enter a film name:\n        </label>\n\n        <input\n          type=\"text\"\n          id=\"title\"\n          className={errors.title ? 'invalid' : ''}\n          name=\"title\"\n          value={values.title}\n          onChange={this.handleChange}\n          placeholder=\"Film name\"\n        />\n\n        {errors.title && (\n          <span className=\"error\">\n            Please enter a name\n          </span>\n        )}\n\n        <label htmlFor=\"description\">\n          Enter a description:\n        </label>\n\n        <input\n          type=\"text\"\n          id=\"description\"\n          className={errors.description ? 'invalid' : ''}\n          name=\"description\"\n          value={values.description}\n          onChange={this.handleChange}\n          placeholder=\"Film description\"\n        />\n\n        {errors.description && (\n          <span className=\"error\">\n            Please enter a description\n          </span>\n        )}\n\n        <label htmlFor=\"imgUrl\">\n          Enter a link on the film image:\n        </label>\n\n        <input\n          type=\"text\"\n          id=\"imgUrl\"\n          className={errors.imgUrl ? 'invalid' : ''}\n          name=\"imgUrl\"\n          value={values.imgUrl}\n          onChange={this.handleChange}\n          placeholder=\"https://example.com\"\n        />\n\n        {errors.imgUrl && (\n          <span className=\"error\">\n            Please enter a link on the film image\n          </span>\n        )}\n\n        <label htmlFor=\"imdbUrl\">\n          Enter a link on the IMDb logo:\n        </label>\n\n        <input\n          type=\"text\"\n          id=\"imdbUrl\"\n          className={errors.imdbUrl ? 'invalid' : ''}\n          name=\"imdbUrl\"\n          value={values.imdbUrl}\n          onChange={this.handleChange}\n          placeholder=\"https://example.com\"\n        />\n\n        {errors.imdbUrl && (\n          <span className=\"error\">\n            Please enter a link on the IMDb logo\n          </span>\n        )}\n\n        <label htmlFor=\"imdbId\">\n          Enter an IMDb id:\n        </label>\n\n        <input\n          type=\"text\"\n          id=\"imdbId\"\n          className={errors.imdbId ? 'invalid' : ''}\n          name=\"imdbId\"\n          value={values.imdbId}\n          onChange={this.handleChange}\n          placeholder=\"IMDb id\"\n        />\n\n        {errors.imdbId && (\n          <span className=\"error\">\n            Please enter an IMDb id\n          </span>\n        )}\n\n        <button type=\"submit\">\n          Add New Movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n    input: '',\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <div className=\"field\">\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                name=\"input\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n\n          <MoviesList movies={movies} filter={this.state.input} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}